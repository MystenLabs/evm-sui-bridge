{
  "address": "0x09d0B9da7d4e986Caf72570920c6CCfbCe5c7fDA",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_wETH",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "targetAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "targetAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wETH",
      "outputs": [
        {
          "internalType": "contract IWETH9",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xe4f3ca83fc59a76279fe768cfe5740e8df458805341003eb3bf41b2b82f9b99e",
  "receipt": {
    "to": null,
    "from": "0xb18f79Fe671db47393315fFDB377Da4Ea1B7AF96",
    "contractAddress": "0x09d0B9da7d4e986Caf72570920c6CCfbCe5c7fDA",
    "transactionIndex": 59,
    "gasUsed": "625661",
    "logsBloom": "0x000000000000000000000000000000000000000000000000008002000000000000000000000000000000000000000000000000000000000000000000000000000000000080000000000000000000000000010000000000000000000000000000000000000200000000000000000008000000000000000000000000000000004000008000000000000000000000000000000000000000000000000000002000000000000000000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0xea6bf4c804aca7c6790f8dd7f7395ae1304f9cdd87a1ff230fd0f1f99ea305b5",
    "transactionHash": "0xe4f3ca83fc59a76279fe768cfe5740e8df458805341003eb3bf41b2b82f9b99e",
    "logs": [
      {
        "transactionIndex": 59,
        "blockNumber": 5024613,
        "transactionHash": "0xe4f3ca83fc59a76279fe768cfe5740e8df458805341003eb3bf41b2b82f9b99e",
        "address": "0x09d0B9da7d4e986Caf72570920c6CCfbCe5c7fDA",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000b18f79fe671db47393315ffdb377da4ea1b7af96"
        ],
        "data": "0x",
        "logIndex": 53,
        "blockHash": "0xea6bf4c804aca7c6790f8dd7f7395ae1304f9cdd87a1ff230fd0f1f99ea305b5"
      }
    ],
    "blockNumber": 5024613,
    "cumulativeGasUsed": "4162750",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xfFf9976782d46CC05630D1f6eBAb18b2324d6B14"
  ],
  "numDeployments": 1,
  "solcInputHash": "d2b5aec76bc212a82d627d799f48250f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wETH\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"targetAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wETH\",\"outputs\":[{\"internalType\":\"contract IWETH9\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BridgeVault.sol\":\"BridgeVault\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x0000000000000031373034343331313338333337\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BridgeVault.sol\":{\"content\":\"pragma solidity ^0.8.0;\\n\\nimport \\\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\\\";\\nimport \\\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"./interfaces/IWETH9.sol\\\";\\nimport \\\"./interfaces/IBridgeVault.sol\\\";\\n\\ncontract BridgeVault is Ownable, IBridgeVault {\\n    // The WETH address\\n    IWETH9 public immutable wETH;\\n\\n    constructor(address _wETH) Ownable() {\\n        // Set the WETH address\\n        wETH = IWETH9(_wETH);\\n    }\\n\\n    function transferERC20(address tokenAddress, address targetAddress, uint256 amount)\\n        external\\n        override\\n        onlyOwner\\n    {\\n        // Get the token contract instance\\n        IERC20 token = IERC20(tokenAddress);\\n\\n        // Transfer the tokens from the contract to the target address\\n        bool success = token.transfer(targetAddress, amount);\\n\\n        // Check that the transfer was successful\\n        require(success, \\\"BridgeVault: Transfer failed\\\");\\n    }\\n\\n    function transferETH(address payable targetAddress, uint256 amount)\\n        external\\n        override\\n        onlyOwner\\n    {\\n        // unwrap the WETH\\n        wETH.withdraw(amount);\\n\\n        // TODO: check transfer success\\n        // Transfer the unwrapped ETH to the target address\\n        targetAddress.transfer(amount);\\n    }\\n\\n    // These are needed to receive ETH when unwrapping WETH\\n    receive() external payable {}\\n\\n    fallback() external payable {}\\n}\\n\",\"keccak256\":\"0x4d76495ee3b67eda53feae500abf16734855636185686bcfddaf32a8c678d5e6\"},\"contracts/interfaces/IBridgeVault.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IBridgeVault {\\n    function transferERC20(address tokenAddress, address targetAddress, uint256 amount) external;\\n\\n    function transferETH(address payable targetAddress, uint256 amount) external;\\n}\\n\",\"keccak256\":\"0x11d0d4befd4b572465e4739b13aabc47d54c9daf83d1c5b97c309b9ca62fc912\",\"license\":\"MIT\"},\"contracts/interfaces/IWETH9.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity ^0.8.0;\\n\\nimport \\\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\\\";\\n\\n/// @title Interface for WETH9\\ninterface IWETH9 is IERC20 {\\n    /// @notice Deposit ether to get wrapped ether\\n    function deposit() external payable;\\n\\n    /// @notice Withdraw wrapped ether to get ether\\n    function withdraw(uint256 wad) external;\\n}\\n\",\"keccak256\":\"0xd59994b00e68d5c6cfbdec887925caf25bc6184404f81dceac5816489a9c612e\",\"license\":\"GPL-2.0-or-later\"},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610bd6380380610bd6833981810160405281019061003291906101b7565b61004e61004361008860201b60201c565b61009060201b60201c565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050506101e4565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061018482610159565b9050919050565b61019481610179565b811461019f57600080fd5b50565b6000815190506101b18161018b565b92915050565b6000602082840312156101cd576101cc610154565b5b60006101db848285016101a2565b91505092915050565b6080516109d061020660003960008181610168015261033d01526109d06000f3fe6080604052600436106100595760003560e01c8063715018a6146100625780637b1a4909146100795780638da5cb5b146100a25780639db5dbe4146100cd578063f2428621146100f6578063f2fde38b1461012157610060565b3661006057005b005b34801561006e57600080fd5b5061007761014a565b005b34801561008557600080fd5b506100a0600480360381019061009b91906105c5565b61015e565b005b3480156100ae57600080fd5b506100b761023c565b6040516100c49190610626565b60405180910390f35b3480156100d957600080fd5b506100f460048036038101906100ef919061066d565b610265565b005b34801561010257600080fd5b5061010b61033b565b604051610118919061071f565b60405180910390f35b34801561012d57600080fd5b506101486004803603810190610143919061073a565b61035f565b005b6101526103e2565b61015c6000610460565b565b6101666103e2565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d826040518263ffffffff1660e01b81526004016101bf9190610776565b600060405180830381600087803b1580156101d957600080fd5b505af11580156101ed573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610237573d6000803e3d6000fd5b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61026d6103e2565b600083905060008173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856040518363ffffffff1660e01b81526004016102af929190610791565b6020604051808303816000875af11580156102ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f291906107f2565b905080610334576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032b9061087c565b60405180910390fd5b5050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6103676103e2565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036103d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103cd9061090e565b60405180910390fd5b6103df81610460565b50565b6103ea610524565b73ffffffffffffffffffffffffffffffffffffffff1661040861023c565b73ffffffffffffffffffffffffffffffffffffffff161461045e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104559061097a565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061055c82610531565b9050919050565b61056c81610551565b811461057757600080fd5b50565b60008135905061058981610563565b92915050565b6000819050919050565b6105a28161058f565b81146105ad57600080fd5b50565b6000813590506105bf81610599565b92915050565b600080604083850312156105dc576105db61052c565b5b60006105ea8582860161057a565b92505060206105fb858286016105b0565b9150509250929050565b600061061082610531565b9050919050565b61062081610605565b82525050565b600060208201905061063b6000830184610617565b92915050565b61064a81610605565b811461065557600080fd5b50565b60008135905061066781610641565b92915050565b6000806000606084860312156106865761068561052c565b5b600061069486828701610658565b93505060206106a586828701610658565b92505060406106b6868287016105b0565b9150509250925092565b6000819050919050565b60006106e56106e06106db84610531565b6106c0565b610531565b9050919050565b60006106f7826106ca565b9050919050565b6000610709826106ec565b9050919050565b610719816106fe565b82525050565b60006020820190506107346000830184610710565b92915050565b6000602082840312156107505761074f61052c565b5b600061075e84828501610658565b91505092915050565b6107708161058f565b82525050565b600060208201905061078b6000830184610767565b92915050565b60006040820190506107a66000830185610617565b6107b36020830184610767565b9392505050565b60008115159050919050565b6107cf816107ba565b81146107da57600080fd5b50565b6000815190506107ec816107c6565b92915050565b6000602082840312156108085761080761052c565b5b6000610816848285016107dd565b91505092915050565b600082825260208201905092915050565b7f4272696467655661756c743a205472616e73666572206661696c656400000000600082015250565b6000610866601c8361081f565b915061087182610830565b602082019050919050565b6000602082019050818103600083015261089581610859565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006108f860268361081f565b91506109038261089c565b604082019050919050565b60006020820190508181036000830152610927816108eb565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061096460208361081f565b915061096f8261092e565b602082019050919050565b6000602082019050818103600083015261099381610957565b905091905056fea26469706673582212204d52988d232b43d9b9030730ce0319d031c23fee4cbbc9859c4c07fe6431918164736f6c634300080f0033",
  "deployedBytecode": "0x6080604052600436106100595760003560e01c8063715018a6146100625780637b1a4909146100795780638da5cb5b146100a25780639db5dbe4146100cd578063f2428621146100f6578063f2fde38b1461012157610060565b3661006057005b005b34801561006e57600080fd5b5061007761014a565b005b34801561008557600080fd5b506100a0600480360381019061009b91906105c5565b61015e565b005b3480156100ae57600080fd5b506100b761023c565b6040516100c49190610626565b60405180910390f35b3480156100d957600080fd5b506100f460048036038101906100ef919061066d565b610265565b005b34801561010257600080fd5b5061010b61033b565b604051610118919061071f565b60405180910390f35b34801561012d57600080fd5b506101486004803603810190610143919061073a565b61035f565b005b6101526103e2565b61015c6000610460565b565b6101666103e2565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d826040518263ffffffff1660e01b81526004016101bf9190610776565b600060405180830381600087803b1580156101d957600080fd5b505af11580156101ed573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610237573d6000803e3d6000fd5b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61026d6103e2565b600083905060008173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856040518363ffffffff1660e01b81526004016102af929190610791565b6020604051808303816000875af11580156102ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f291906107f2565b905080610334576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032b9061087c565b60405180910390fd5b5050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6103676103e2565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036103d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103cd9061090e565b60405180910390fd5b6103df81610460565b50565b6103ea610524565b73ffffffffffffffffffffffffffffffffffffffff1661040861023c565b73ffffffffffffffffffffffffffffffffffffffff161461045e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104559061097a565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061055c82610531565b9050919050565b61056c81610551565b811461057757600080fd5b50565b60008135905061058981610563565b92915050565b6000819050919050565b6105a28161058f565b81146105ad57600080fd5b50565b6000813590506105bf81610599565b92915050565b600080604083850312156105dc576105db61052c565b5b60006105ea8582860161057a565b92505060206105fb858286016105b0565b9150509250929050565b600061061082610531565b9050919050565b61062081610605565b82525050565b600060208201905061063b6000830184610617565b92915050565b61064a81610605565b811461065557600080fd5b50565b60008135905061066781610641565b92915050565b6000806000606084860312156106865761068561052c565b5b600061069486828701610658565b93505060206106a586828701610658565b92505060406106b6868287016105b0565b9150509250925092565b6000819050919050565b60006106e56106e06106db84610531565b6106c0565b610531565b9050919050565b60006106f7826106ca565b9050919050565b6000610709826106ec565b9050919050565b610719816106fe565b82525050565b60006020820190506107346000830184610710565b92915050565b6000602082840312156107505761074f61052c565b5b600061075e84828501610658565b91505092915050565b6107708161058f565b82525050565b600060208201905061078b6000830184610767565b92915050565b60006040820190506107a66000830185610617565b6107b36020830184610767565b9392505050565b60008115159050919050565b6107cf816107ba565b81146107da57600080fd5b50565b6000815190506107ec816107c6565b92915050565b6000602082840312156108085761080761052c565b5b6000610816848285016107dd565b91505092915050565b600082825260208201905092915050565b7f4272696467655661756c743a205472616e73666572206661696c656400000000600082015250565b6000610866601c8361081f565b915061087182610830565b602082019050919050565b6000602082019050818103600083015261089581610859565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006108f860268361081f565b91506109038261089c565b604082019050919050565b60006020820190508181036000830152610927816108eb565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061096460208361081f565b915061096f8261092e565b602082019050919050565b6000602082019050818103600083015261099381610957565b905091905056fea26469706673582212204d52988d232b43d9b9030730ce0319d031c23fee4cbbc9859c4c07fe6431918164736f6c634300080f0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 2984,
        "contract": "contracts/BridgeVault.sol:BridgeVault",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      }
    }
  }
}